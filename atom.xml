<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蓝调华尔兹</title>
  
  <subtitle>每个人都曾经穿越不为人知的黑暗</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-02-01T13:31:29.106Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>YU.LIAO</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>理解Java中的synchronized关键字</title>
    <link href="http://yoursite.com/2018/02/01/java-synchronized/"/>
    <id>http://yoursite.com/2018/02/01/java-synchronized/</id>
    <published>2018-02-01T13:25:12.637Z</published>
    <updated>2018-02-01T13:31:29.106Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><p>理解synchronized的含义、明确synchronized关键字修饰普通方法、静态方法和代码块时锁对象的差异。</p><p>有如下一个类A</p><p>class A {<br>public synchronized void a() {<br>System.out.println(“a”+System.currentTimeMillis());<br>}</p><p>public synchronized void b() {<br>System.out.println(“b”+System.currentTimeMillis());<br>}<br>}</p><p>然后创建两个对象</p><p>A a1 = new A();<br>A a2 = new A();</p><p>然后在两个线程中并发访问如下代码：</p><p>Thread a1.a();<br>Thread a2.a();</p><p>public class Test {<br>public static void main(String[] args) {</p><p>A a1 = new A();<br>A a2 = new A();</p><p>new Thread(new Runnable() {<br>@Override<br>public void run() {<br>System.out.println(System.currentTimeMillis());<br>a1.a();<br>}<br>}).start();</p><p>new Thread(new Runnable() {<br>@Override<br>public void run() {<br>System.out.println(System.currentTimeMillis());<br>a2.a();<br>}<br>}).start();</p><p>}<br>}</p><p>请问二者能否构成线程同步？</p><p>如果A的定义是下面这种呢？</p><p>class A {<br>public static synchronized void a() {<br>System.out.println(“a”);<br>}</p><p>public static synchronized void b() {<br>System.out.println(“b”);<br>}<br>}</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>没有加static的时候结果是这样的:</p><p><img src="java-synchronized/sync.jpg" alt="sync"></p><p>加了static的时候结果是这样的:</p><p><img src="java-synchronized/sync1.jpg" alt="sync1"></p><p>可以看出，没有static时不能同步，有static时能同步。</p><p>Java多线程中的同步机制会对资源进行加锁，保证在同一时间只有一个线程可以操作对应资源，避免多程同时访问相同资源发生冲突。Synchronized是Java中的关键字，它是一种同步锁，可以实现同步机制。</p><p>Synchronized主修修饰对象为以下三种：</p><ol><li><p>修饰普通方法：一个对象中的加锁方法只允许一个线程访问。但要注意这种情况下锁的是访问该方法的实例对象，如果多个线程不同对象访问该方法，则无法保证同步。</p></li><li><p>修饰静态方法：由于静态方法是类方法，所以这种情况下锁的是包含这个方法的类，也就是类对象；这样如果多个线程不同对象访问该静态方法，也是可以保证同步的。</p></li><li><p>修饰代码块：其中普通代码块，如Synchronized（obj），这里的obj，可以为类中的一个属性、也可以是当前的对象，它的同步效果和修饰普通方法一样；Synchronized方法 （obj.class）静态代码块它的同步效果和修饰静态方法类似。</p></li></ol><p>Synchronized方法控制范围较大，它会同步对象中所有Synchronized方法的代码。</p><p>Synchronized代码块控制范围较小，它只会同步代码块中的代码，而位于代码块之外的代码是可以被多个线程访问的。</p><p>简单来说 就是 Synchronized代码块更加灵活精确。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;p&gt;理解synchronized的含义、明确synchronized关键字修饰普通方法、静态方法和代码块时锁对象的差异。&lt;/p&gt;
      
    
    </summary>
    
      <category term="Android学习计划" scheme="http://yoursite.com/categories/Android%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/01/30/hello-world/"/>
    <id>http://yoursite.com/2018/01/30/hello-world/</id>
    <published>2018-01-30T08:56:01.913Z</published>
    <updated>2018-02-01T07:45:36.256Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="hexo笔记" scheme="http://yoursite.com/categories/hexo%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
